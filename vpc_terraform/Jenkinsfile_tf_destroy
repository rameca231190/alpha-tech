// a.groovy
import groovy.transform.Field
import groovy.lang.Binding
pipeline {
    agent any
    stages {
        stage('Terraform init and plan') {
            agent {label 'alpha-ansible-dev-sg-node'} 
            environment {
                aws_access_key_id = credentials('aws_access_key_id')
                aws_secret_access_key = credentials('aws_secret_access_key')
                aws_region = 'ap-southeast-1'
            }
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GitHub personal access token', url: 'https://github.com/Alpha-TechUSA/vpc_terraform.git']]])
                sh "ls -lart ./*"
                sh "aws configure set aws_access_key_id ${aws_access_key_id}"
                sh "aws configure set aws_secret_access_key ${aws_secret_access_key}"
                sh "aws configure set default.region ${aws_region}"
                script {
                    sh '''
                    cd alpha_tech_vpc_terraform
                    terraform init
                    terraform plan --var-file=values.tfvars 
                    '''
                }
            }
        }
        stage('Terraform destroy') {
            agent {label 'alpha-ansible-dev-sg-node'} 
            steps {
                timeout(time:8, unit:'HOURS') {
                    input("Proceed to destroy DEV VPC ?")
                }
                script {
                    sh '''
                    cd alpha_tech_vpc_terraform
                    terraform destroy --var-file=values.tfvars --auto-approve=true
                    '''
                }
                }
            }
        }
        post { 
        always { 
            cleanWs()
        }
    }
}  