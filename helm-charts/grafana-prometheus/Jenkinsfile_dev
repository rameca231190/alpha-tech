// a.groovy
import groovy.transform.Field
import groovy.lang.Binding
pipeline {
    agent any
    stages {
        stage('Set up') {
            agent {
                docker {
                    image 'versoview/base-image:base_helm_dev_2'
                    registryUrl 'https://registry.hub.docker.com'
                    args '-u root:root'
                    registryCredentialsId 'dockerhub_generic'
                }
            }
            environment {
                ENVIRONMENT = "dev"
                aws_region = "ap-southeast-1"
                aws_access_key_id = credentials('aws_access_key_id')
                aws_secret_access_key = credentials('aws_secret_access_key')
            }
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GT_PAT', url: 'https://github.com/Alpha-TechUSA/helm-charts.git']]])
                withCredentials([kubeconfigFile(credentialsId: 'dev_eks_kubeconfig', variable: 'KUBECONFIG')]) {
                    sh "aws configure set aws_access_key_id ${aws_access_key_id}"
                    sh "aws configure set aws_secret_access_key ${aws_secret_access_key}"
                    sh "aws configure set default.region ${aws_region}"
                    sh "mkdir ~/.kube"
                    sh "echo ${KUBECONFIG} > ~/.kube/config"
                    sh "kubectl get nodes"
                    sh "ls grafana-prometheus"
                    sh "chmod 755 grafana-prometheus/script_monitoring.sh"
                    // Trigger script_monitoring script to install control plane on k8s
                    sh "./grafana-prometheus/script_monitoring.sh ${ENVIRONMENT} ${aws_region} ${aws_access_key_id} ${aws_secret_access_key}"
                }
                }
            }
        }
}